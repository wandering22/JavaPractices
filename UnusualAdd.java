import java.util.*;

//思路：利用位运算，
//  对于异或：0^0=0,1^0=1,1^1=0，可以实现数字无进位相加。
//  再用与运算0&0=0,1&0=0,1&1=1，将与运算的结果左移1位即可变为进位位。
//  一直加到进位位为0结束计算。
public class UnusualAdd {
    public int addAB(int A, int B) {
        int carry=(A&B)<<1;
        A=A^B;
        B=carry;
        while (B!=0)
        {carry=(A&B)<<1;
            A=A^B;
            B=carry;
        }
        return A;
    }
}

//位的异或运算跟求'和'的结果一致：
//异或 1^1=0 1^0=1 0^0=0
//求和 1+1=0 1+0=1 0+0=0
//位的与运算跟求'进位‘的结果一致：
//位与 1&1=1 1&0=0 0&0=0
//进位 1+1=1 1+0=0 0+0=0
//于是可以用异或运算和与运算来表示加法